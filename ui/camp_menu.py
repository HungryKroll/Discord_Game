# ui\camp_menu.py
# –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô:
# –ú–µ–Ω—é –ª–∞–≥–µ—Ä—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏

import discord
import logging
from ui.base_menu import BaseMenu, BaseButton
from models.character import Character
from models.inventory import InventoryManager
from ui.trade_menu import TradeMenu
from ui.inventory_menu import InventoryMenu
from ui.equipment_menu import EquipmentMenu


class CampMenu(BaseMenu):

    @classmethod
    async def create(cls, user):
        """
        –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ CampMenu.
        """
        logging.info(f"–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –ª–∞–≥–µ—Ä—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user}")
        character = await Character.get_from_db(user.id)

        # –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –∑–æ–ª–æ—Ç–∞ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
        money = await InventoryManager.get_gold(user.id)  # –î–æ–±–∞–≤–ª–µ–Ω await

        instance = cls(user)
        instance.character = character
        instance.money = money

        logging.info(f"–ú–µ–Ω—é –ª–∞–≥–µ—Ä—è —Å–æ–∑–¥–∞–Ω–æ. –ó–æ–ª–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {money}")
        return instance

    def __init__(self, user):
        """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –±–µ–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤."""
        logging.debug("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CampMenu")

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ (—Ç–æ—Ä–≥–æ–≤–ª—è)
        store_button = BaseButton(
            label="–ú–∞–≥–∞–∑–∏–Ω üõí",
            user=user,
            callback=self.open_store,
            style=discord.ButtonStyle.primary
        )

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
        equipment_button = BaseButton(
            label="–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ üîß",
            user=user,
            callback=self.open_equipment,
            style=discord.ButtonStyle.secondary
        )

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        inventory_button = BaseButton(
            label="–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å üéí",
            user=user,
            callback=self.open_inventory,
            style=discord.ButtonStyle.green
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
        super().__init__(
            user,
            store_button,
            equipment_button,
            inventory_button
        )

        self.user = user
        self.character = None
        self.money = 0

    async def open_store(self, interaction: discord.Interaction):
        """
        –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é —Ç–æ—Ä–≥–æ–≤–ª–∏.
        """
        try:
            trade_menu = await TradeMenu.create(interaction.user)
            await interaction.response.edit_message(view=trade_menu)
            logging.info(f"–ú–∞–≥–∞–∑–∏–Ω —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç –¥–ª—è {interaction.user}")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞: {e}")
            await interaction.followup.send(
                content="–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω.",
                ephemeral=True
            )

    async def open_equipment(self, interaction: discord.Interaction):
        """
        –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è.
        """
        try:
            equipment_menu = await EquipmentMenu.create(interaction.user)
            await interaction.response.edit_message(view=equipment_menu)
            logging.info(f"–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ –¥–ª—è {interaction.user}")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è: {e}")
            await interaction.followup.send(
                content="–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ.",
                ephemeral=True
            )

    async def open_inventory(self, interaction: discord.Interaction):
        """
        –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è.
        """
        try:
            inventory_menu = await InventoryMenu.create(interaction.user)
            await interaction.response.edit_message(
                content=f"üí∞ –ó–æ–ª–æ—Ç–æ: {self.money} | {StorageType.INVENTORY['display']}",
                view=inventory_menu
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: {e}")
            await interaction.followup.send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.", ephemeral=True)

    async def update_balance(self, interaction: discord.Interaction):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º –±–∞–ª–∞–Ω—Å–æ–º."""
        self.money = await InventoryManager.get_gold(self.user.id)
        await interaction.edit_original_response(content=f"üí∞ –ó–æ–ª–æ—Ç–æ: {self.money}")

    async def go_back(self, interaction: discord.Interaction):
        """
        –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ª–∞–≥–µ—Ä—è.
        """
        try:
            from ..camp_menu import CampMenu  # –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
            camp_menu = await CampMenu.create(interaction.user)
            await interaction.response.edit_message(view=camp_menu)
            logging.info(f"CampMenu.go_back: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.id} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        except Exception as e:
            logging.error(f"CampMenu.go_back: {e} | UserID: {interaction.user.id}")
            await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", ephemeral=True)
