# game_commands.py
import os
import logging
import discord
from discord.ext import commands
from models.character import Character
from models.inventory import InventoryManager
from config.database import execute_query, fetch_query
from ui.camp_menu import CampMenu
from config.logger import setup_logger, safe_execute


class GameCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.raid_channel_id = int(os.getenv('raid_channel_ID'))
        self.camp_channel_id = int(os.getenv('camp_channel_ID'))

    async def check_character_exists(self, ctx):
        """
        –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        """
        if not await Character.exists(ctx.author.id):
            await ctx.send("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ —Å–æ–∑–¥–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É !–Ω–æ–≤—ã–π")
            return False
        return True

    async def clean_up_threads(self, user_id):
        """–£–¥–∞–ª–µ–Ω–∏–µ –≤–µ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –ë–î, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ Discord"""
        db_threads = await fetch_query("SELECT threads_id FROM threads WHERE user_id = ?", (user_id,))

        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–Ω–∞–ª–∞
        camp_channel = self.bot.get_channel(self.camp_channel_id)

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Ç–æ–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ
        discord_threads = {thread.id for thread in camp_channel.threads}  # –£–±–∏—Ä–∞–µ–º –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤

        for db_thread in db_threads:
            if db_thread[0] not in discord_threads:  # db_thread - —ç—Ç–æ –∫–æ—Ä—Ç–µ–∂, –ø–æ—ç—Ç–æ–º—É –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
                await execute_query("DELETE FROM threads WHERE threads_id = ?", (db_thread[0],))

    @commands.command(name='–ª–∞–≥–µ—Ä—å')
    @safe_execute
    async def create_camp(self, ctx):
        if not await self.check_character_exists(ctx):
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª –ª–∞–≥–µ—Ä–µ–º –∏–ª–∏ –µ–≥–æ –≤–µ—Ç–∫–æ–π
        if ctx.channel.id != self.camp_channel_id and ctx.channel.parent.id != self.camp_channel_id:
            await ctx.send("‚ùå –õ–∞–≥–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ –∏–ª–∏ –µ–≥–æ –≤–µ—Ç–∫–∞—Ö.")
            return

        character = await Character.get_from_db(ctx.author.id)
        if not character:
            await ctx.send("‚ùå –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–æ–º–∞–Ω–¥–æ–π !–Ω–æ–≤—ã–π")
            return

        # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ç–æ–∫
        await self.clean_up_threads(ctx.author.id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ª–∞–≥–µ—Ä—å
        existing_thread = await fetch_query("SELECT threads_id FROM threads WHERE user_id = ?", (ctx.author.id,))
        if existing_thread:
            await ctx.send("‚ö†Ô∏è –õ–∞–≥–µ—Ä—å —É–∂–µ —Ä–∞–∑–±–∏—Ç. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ.")
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –º–µ–Ω—é –ª–∞–≥–µ—Ä—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≤–µ—Ç–∫–µ
            thread = self.bot.get_channel(existing_thread[0][0])  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –≤–µ—Ç–∫–∏
            camp_menu = await CampMenu.create(ctx.author)
            await thread.send(content=f"üí∞ –ó–æ–ª–æ—Ç–æ: {camp_menu.money}", view=camp_menu)
            return

        thread = await ctx.channel.create_thread(
            name=f"üèïÔ∏è –õ–∞–≥–µ—Ä—å {character.stats['name']}",
            type=discord.ChannelType.private_thread
        )

        await thread.add_user(ctx.author)

        await execute_query(
            "INSERT INTO threads (threads_id, user_id, thread_type) VALUES (?, ?, 'camp')",
            (thread.id, ctx.author.id)
        )

        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –ª–∞–≥–µ—Ä—è
        camp_menu = await CampMenu.create(ctx.author)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –≤ —Å–æ–∑–¥–∞–Ω–Ω—É—é –≤–µ—Ç–∫—É
        camp_message = await thread.send(
            content=f"üí∞ –ó–æ–ª–æ—Ç–æ: {camp_menu.money}",
            view=camp_menu
        )

    @commands.command(name='—Ä–µ–π–¥')
    async def create_raid(self, ctx):
        if ctx.channel.id != self.camp_channel_id:
            await ctx.send("‚ùå –†–µ–π–¥ –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Ç–∞–≤–µ—Ä–Ω–µ –∏–ª–∏ –ª–∞–≥–µ—Ä–µ.")
            return

        character = await Character.get_from_db(ctx.author.id)
        if not character:
            await ctx.send("‚ùå –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–æ–º–∞–Ω–¥–æ–π !–Ω–æ–≤—ã–π")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª —Ä–µ–π–¥–æ–≤ –ø–æ –µ–≥–æ ID
        raid_channel = self.bot.get_channel(int(os.getenv('raid_channel_ID')))

        if not raid_channel:
            await ctx.send("‚ùå –ö–∞–Ω–∞–ª –¥–ª—è —Ä–µ–π–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # –°–æ–∑–¥–∞–µ–º –≤–µ—Ç–∫—É –≤ –∫–∞–Ω–∞–ª–µ —Ä–µ–π–¥–æ–≤
        thread = await raid_channel.create_thread(
            name=f"üó°Ô∏è –†–µ–π–¥ {character.name}",
            type=discord.ChannelType.private_thread
        )

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Å–∏—Å—Ç–µ–º–Ω–æ–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–µ—Ç–∫–∏)
        async for message in thread.history(limit=1):
            await message.delete()
            break

        await thread.add_user(ctx.author)

        await execute_query(
            "INSERT INTO threads (threads_id, user_id, thread_type) VALUES (?, ?, 'raid')",
            (thread.id, ctx.author.id)
        )

    @commands.command(name='—Ä–µ–ø–∞')
    async def set_reputation(self, ctx, delta: int):
        if not await self.check_character_exists(ctx):
            return

        character = await Character.get_from_db(ctx.author.id)
        current_rep = await character.get_reputation()
        new_rep = max(0, min(100, current_rep + delta))

        if await character.update_stat("Reputation", new_rep):

            await ctx.send(f"‚úÖ –†–µ–ø—É—Ç–∞—Ü–∏—è {character.name} –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {delta}. –¢–µ–∫—É—â–∞—è: {new_rep}")
        else:
            await ctx.send("‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–ø—É—Ç–∞—Ü–∏–∏")

    @commands.command(name='—Å—Ç–∞—Ç—ã')
    async def show_stats(self, ctx):
        if not await self.check_character_exists(ctx):
            return

        character = await Character.get_from_db(ctx.author.id)
        gold_amount = await InventoryManager.get_gold(ctx.author.id)

        stats_embed = discord.Embed(title=f"–°—Ç–∞—Ç—ã {character.stats['name']}", color=0x00ff00)
        stats_embed.add_field(name="–ó–¥–æ—Ä–æ–≤—å–µ", value=f"{character.health}/{character.max_health}", inline=True)
        stats_embed.add_field(name="–ú–∞–Ω–∞", value=f"{character.mana}", inline=True)
        stats_embed.add_field(name="–ó–æ–ª–æ—Ç–æ", value=f"{gold_amount} üí∞", inline=True)
        stats_embed.add_field(name="–†–µ–ø—É—Ç–∞—Ü–∏—è", value=f"{await character.get_reputation()} ‚≠ê", inline=True)

        await ctx.send(embed=stats_embed)

    @commands.command(name='–Ω–æ–≤—ã–π')
    async def create_character(self, ctx):
        if await Character.exists(ctx.author.id):
            await ctx.send("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            return

        # –°–æ–∑–¥–∞—ë–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –±–µ–∑ —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è –∏–º–µ–Ω–∏
        new_character = await Character.create_new_character(ctx.author.id)

        if new_character:
            # –ë–µ—Ä—ë–º –∏–º—è –∏–∑ –ë–î —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ get_from_db
            character_from_db = await Character.get_from_db(ctx.author.id)
            await ctx.send(f"‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ {character_from_db.stats['name']} —Å–æ–∑–¥–∞–Ω!")
        else:
            await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.")

    @commands.command(name='—Ö–ø')
    async def set_health(self, ctx, amount: int):
        if not await self.check_character_exists(ctx):
            return

        character = await Character.get_from_db(ctx.author.id)

        if await character.update_stats(health_delta=amount):
            sign = "+" if amount >= 0 else ""
            await ctx.send(f"‚úÖ –ó–¥–æ—Ä–æ–≤—å–µ {character.name} –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {sign}{amount}.")
        else:
            await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–¥–æ—Ä–æ–≤—å—è.")

    @commands.command(name='–≥–æ–ª–¥')
    async def set_money(self, ctx, delta: int):
        from models.storage import StorageType

        if not await self.check_character_exists(ctx):
            return

        if delta > 0:
            success = await InventoryManager.add_item(
                ctx.author.id,
                InventoryManager.GOLD_ITEM_ID,
                delta,
                StorageType.INVENTORY
            )
        else:
            success = await InventoryManager.remove_item(
                ctx.author.id,
                InventoryManager.GOLD_ITEM_ID,
                abs(delta),
                StorageType.INVENTORY
            )

        if success:
            await ctx.send(f"‚úÖ –ó–æ–ª–æ—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {delta} –º–æ–Ω–µ—Ç")
        else:
            await ctx.send("‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–æ–ª–æ—Ç–∞")


async def setup(bot):
    await bot.add_cog(GameCommands(bot))
